name: NPM WASM Trusted Publisher

on:
  workflow_call:
    secrets:
      GIT_TOKEN:
        description: 'github personal token'
        required: true

    inputs:
      dry_run:
        type: boolean
        description: pass dry-run to semantic-release
        default: false

      action_ref:
        type: string
        description: 'Branch name for node-modules/github-actions, for test purpose'
        default: master

      skip_build:
        type: boolean
        description: skip the build step prior to release
        default: false

jobs:
  Release:
    permissions:
      contents: write
      id-token: write # Required for OIDC
      deployments: write
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: main_repo

    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # Checkout action repository
      - name: Checkout action repository
        uses: actions/checkout@v5
        with:
          repository: node-modules/github-actions
          path: action_repo
          ref: ${{ inputs.action_ref }}

      # Checkout project repository with full history for semantic-release
      - name: Checkout project repository
        uses: actions/checkout@v5
        with:
          path: main_repo
          token: ${{ secrets.GIT_TOKEN }}
          fetch-depth: 0

      # Setup Node.js and pnpm
      - name: Setup Node.js and pnpm
        uses: wyvox/action-setup-pnpm@v3
        with:
          node-version: 24

      # Install Rust toolchain and target for WASM for project repository
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          path: main_repo
          targets: wasm32-unknown-unknown

      # Cache Cargo directories and build artifacts
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            main_repo/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Install action dependencies
      - name: Install action dependencies
        run: pnpm install --no-frozen-lockfile
        working-directory: action_repo/scripts/npm-release

      # Install project dependencies
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: main_repo

      # Build the project (WASM release)
      - name: Build (WASM release)
        if: ${{ !inputs.skip_build }}
        run: pnpm build --release
        working-directory: main_repo

      - name: Semantic Release
        id: release
        run: node ../action_repo/scripts/npm-release/index.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DRYRUN: ${{ inputs.dry_run }}

      - name: Publish ${{ steps.release.outputs.name }}@${{ steps.release.outputs.release_version }}
        if: steps.release.outputs.release_version && !inputs.dry_run
        run: |
          echo ${{ steps.release.outputs.name }}
          echo ${{ steps.release.outputs.release_version }}
          echo ${{ steps.release.outputs.registry }}

